{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\Github\\\\Notes\\\\NotesReactApp\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React, { useState } from \"react\";\nimport Constants from './Constants';\nimport NoteCreateForm from './components/NoteCreateForm';\nimport NoteUpdateForm from './components/NoteUpdateForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [showingCreateNewNoteForm, setShowingCreateNewNoteForm] = useState(false);\n  const [noteCurrentlyBeingUpdated, setNoteCurrentlyBeingUpdated] = useState(null);\n  function getNotes() {\n    const url = Constants.API_BASE_URL;\n    fetch(url, {\n      method: 'GET'\n    }).then(response => response.json()).then(notesFromServer => {\n      setNotes(notesFromServer);\n    }).catch(error => {\n      console.log(error);\n      alert(error);\n    });\n  }\n  function deleteNote(noteId) {\n    const url = `${Constants.API_BASE_URL}?id=${noteId}`;\n    fetch(url, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(responseFromServer => {\n      console.log(responseFromServer);\n      onNoteDeleted(noteId);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row min-vh-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col d-flex flex-column justify-content-center align-items-center\",\n        children: [showingCreateNewNoteForm === false && noteCurrentlyBeingUpdated == null && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"justify-content-center align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Notes App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-group mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: getNotes,\n              className: \"btn btn-dark btn-sm w-100\",\n              children: \"Load Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setShowingCreateNewNoteForm(true),\n              className: \"btn btn-success btn-sm w-100\",\n              children: \"Create Note\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), notes.length > 0 && showingCreateNewNoteForm === false && noteCurrentlyBeingUpdated == null && renderNotesTable(), showingCreateNewNoteForm && /*#__PURE__*/_jsxDEV(NoteCreateForm, {\n          onNoteCreated: onNoteCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 40\n        }, this), noteCurrentlyBeingUpdated !== null && /*#__PURE__*/_jsxDEV(NoteUpdateForm, {\n          note: noteCurrentlyBeingUpdated,\n          onNoteUpdated: onNoteUpdated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n  function renderNotesTable() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-hover border-dark\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Operations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"table-group-divider\",\n          children: notes.map(note => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: note.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: note.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: note.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setNoteCurrentlyBeingUpdated(note),\n                className: \"btn btn-primary btn-sm mx-3\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  if (window.confirm(`Are you sure you want to delete note \"${note.title}?\"`)) deleteNote(note.id);\n                },\n                className: \"btn btn-danger btn-sm\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, note.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setNotes([]),\n          className: \"btn btn-secondary btn-sm w-50\",\n          children: \"Clear Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this);\n  }\n  function onNoteCreated(createdNote) {\n    setShowingCreateNewNoteForm(false);\n    if (createdNote === null) {\n      return;\n    }\n    alert(`Note Successfully Created. Click OK to see the new note \"${createdNote.title}\" show up in the list.`);\n    getNotes();\n  }\n  function onNoteUpdated(updatedNote) {\n    setNoteCurrentlyBeingUpdated(null);\n    if (updatedNote === null) {\n      return;\n    }\n    let notesCopy = [...notes];\n    const index = notesCopy.findIndex((notesCopyPost, currentIndex) => {\n      if (notesCopyPost.id === updatedNote.id) {\n        return true;\n      }\n    });\n    if (index !== -1) {\n      notesCopy[index] = updatedNote;\n    }\n    setNotes(notesCopy);\n    alert(`Note successfully updated. Click OK, to see the Note \"${updatedNote.title}\" in the list with updates.`);\n  }\n  function onNoteDeleted(deletedNoteNoteId) {\n    let notesCopy = [...notes];\n    const index = notesCopy.findIndex((notesCopyPost, currentIndex) => {\n      if (notesCopyPost.id === deletedNoteNoteId) {\n        return true;\n      }\n    });\n    if (index !== -1) {\n      notesCopy.splice(index, 1);\n    }\n    setNotes(notesCopy);\n    alert(`Note Successfully Deleted.`);\n  }\n}\n_s(Home, \"yZ7CLQ9P6d4wAbpuwfjcd+bUV/w=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Constants","NoteCreateForm","NoteUpdateForm","Home","notes","setNotes","showingCreateNewNoteForm","setShowingCreateNewNoteForm","noteCurrentlyBeingUpdated","setNoteCurrentlyBeingUpdated","getNotes","url","API_BASE_URL","fetch","method","then","response","json","notesFromServer","catch","error","console","log","alert","deleteNote","noteId","responseFromServer","onNoteDeleted","length","renderNotesTable","onNoteCreated","onNoteUpdated","map","note","id","title","content","window","confirm","createdNote","updatedNote","notesCopy","index","findIndex","notesCopyPost","currentIndex","deletedNoteNoteId","splice"],"sources":["C:/Dev/Github/Notes/NotesReactApp/src/Home.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport React, { useState } from \"react\";\nimport Constants from './Constants';\nimport NoteCreateForm from './components/NoteCreateForm';\nimport NoteUpdateForm from './components/NoteUpdateForm';\n\nexport default function Home() {\n  const[notes, setNotes] = useState([]);\n  const[showingCreateNewNoteForm, setShowingCreateNewNoteForm] = useState(false);\n  const[noteCurrentlyBeingUpdated, setNoteCurrentlyBeingUpdated]= useState(null);\n\n  function getNotes(){\n      const url = Constants.API_BASE_URL;\n\n    fetch(url,{\n      method:'GET'\n    })\n    .then(response => response.json())\n    .then(notesFromServer => {\n      setNotes(notesFromServer);\n    })\n    .catch((error => {\n      console.log(error);\n      alert(error);\n    }));\n  }\n  \n  function deleteNote(noteId) {\n      const url = `${Constants.API_BASE_URL}?id=${noteId}`;\n\n    fetch(url, {\n      method: 'DELETE'\n    })\n      .then(response => response.json())\n      .then(responseFromServer => {\n          console.log(responseFromServer);\n          onNoteDeleted(noteId);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row min-vh-100\">\n        <div className=\"col d-flex flex-column justify-content-center align-items-center\">\n          {(showingCreateNewNoteForm === false && noteCurrentlyBeingUpdated == null) &&(\n          <div className=\"justify-content-center align-items-center\">\n            <h1>Notes App</h1>\n            <div className='btn-group mt-5'>\n                <button type=\"button\" onClick={getNotes} className='btn btn-dark btn-sm w-100'>Load Notes</button>\n                <button type=\"button\" onClick={() => setShowingCreateNewNoteForm(true)} className='btn btn-success btn-sm w-100'>Create Note</button>\n            </div>\n          </div>\n          )}\n\n          {(notes.length > 0 && showingCreateNewNoteForm === false && noteCurrentlyBeingUpdated == null) && renderNotesTable()}\n\n          {showingCreateNewNoteForm && <NoteCreateForm onNoteCreated={onNoteCreated}/>}\n\n          {noteCurrentlyBeingUpdated !== null && <NoteUpdateForm note={noteCurrentlyBeingUpdated} onNoteUpdated={onNoteUpdated}/>}\n        </div>\n      </div>\n    </div>\n  );\n\n  function renderNotesTable(){\n    return(\n        <div className=\"table-responsive mt-3\">\n        <table className=\"table table-hover border-dark\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Id</th>\n              <th scope=\"col\">Title</th>\n              <th scope=\"col\">Content</th>\n              <th scope=\"col\">Operations</th>\n            </tr>\n          </thead>\n          <tbody className=\"table-group-divider\">\n            {notes.map((note) => (\n              <tr key={note.id}>\n              <th scope=\"row\">{note.id}</th>\n              <td>{note.title}</td>\n              <td>{note.content}</td>\n              <td>\n                <button onClick={() => setNoteCurrentlyBeingUpdated(note)} className='btn btn-primary btn-sm mx-3'>Update</button>\n                <button onClick={()=> {if(window.confirm(`Are you sure you want to delete note \"${note.title}?\"`)) deleteNote(note.id)}} className='btn btn-danger btn-sm'>Delete</button>\n              </td>\n            </tr>\n            ))}\n          </tbody>\n        </table>\n        <div>\n            <button onClick={() => setNotes([])} className='btn btn-secondary btn-sm w-50'>Clear Notes</button>\n        </div>\n      </div>\n    );\n  }\n\n  function onNoteCreated(createdNote){\n    setShowingCreateNewNoteForm(false);    \n    if (createdNote === null){\n      return;\n    }\n\n    alert(`Note Successfully Created. Click OK to see the new note \"${createdNote.title}\" show up in the list.`);\n\n    getNotes();\n  }\n\nfunction onNoteUpdated(updatedNote) {\n    setNoteCurrentlyBeingUpdated(null);\n\n    if (updatedNote === null) {\n        return;\n    }\n\n    let notesCopy = [...notes];\n\n    const index = notesCopy.findIndex((notesCopyPost, currentIndex) => {\n        if (notesCopyPost.id === updatedNote.id) {\n            return true;\n        }\n    });\n\n    if (index !== -1) {\n        notesCopy[index] = updatedNote;\n    }\n\n    setNotes(notesCopy);\n\n    alert(`Note successfully updated. Click OK, to see the Note \"${updatedNote.title}\" in the list with updates.`);\n}\n\nfunction onNoteDeleted(deletedNoteNoteId) {\n    let notesCopy = [...notes];\n\n    const index = notesCopy.findIndex((notesCopyPost, currentIndex) => {\n        if (notesCopyPost.id === deletedNoteNoteId) {\n            return true;\n        }\n    });\n\n    if (index !== -1) {\n        notesCopy.splice(index, 1);\n    }\n\n    setNotes(notesCopy);\n\n    alert(`Note Successfully Deleted.`);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}